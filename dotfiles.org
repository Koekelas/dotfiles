:PROPERTIES:
:header-args: :mkdirp yes
:END:
#+TITLE: Dotfiles

#+BEGIN_QUOTE
Thou shalt not pollute your neighbor's ~/ -- Exodus 20:17
#+END_QUOTE

* Identity
Set name and e-mail.

#+BEGIN_SRC fundamental :noweb-ref name :exports none
  Nicolas De Jaeghere
#+END_SRC

#+BEGIN_SRC fundamental :noweb-ref email :exports none
  nicolas@dejaeghe.re
#+END_SRC

#+BEGIN_SRC conf :tangle stow/env/.config/environment.d/10-identity.conf :noweb yes
  NAME="<<name>>"
  EMAIL="<<email>>"
#+END_SRC

* Well known directories
Set [[https://freedesktop.org/wiki/Specifications/basedir-spec/][base directories]].

#+BEGIN_SRC conf :tangle stow/xdg/.config/environment.d/10-base-dirs.conf
  XDG_CACHE_HOME="$HOME/.cache"
  XDG_CONFIG_HOME="$HOME/.config"
  XDG_DATA_HOME="$HOME/.local/share"
#+END_SRC

Then, set [[https://freedesktop.org/wiki/Software/xdg-user-dirs/][user directories]].

#+BEGIN_SRC conf :noweb-ref user-dirs :tangle stow/xdg/.config/user-dirs.dirs
  XDG_DESKTOP_DIR="$HOME/.Bureaublad"
  XDG_DOCUMENTS_DIR="$HOME/Documenten"
  XDG_DOWNLOAD_DIR="$HOME/Inbox/tmp"
  XDG_MUSIC_DIR="$HOME/Muziek"
  XDG_PICTURES_DIR="$HOME/Afbeeldingen"
  XDG_PUBLICSHARE_DIR="$HOME/Delen"
  XDG_TEMPLATES_DIR="$HOME/Sjablonen"
  XDG_VIDEOS_DIR="$HOME/Video's"
#+END_SRC

Again, but as environment variables.

#+BEGIN_SRC conf :tangle stow/xdg/.config/environment.d/10-user-dirs.conf :noweb no-export
  <<user-dirs>>
#+END_SRC

Finally, set other directories.

#+BEGIN_SRC conf :tangle stow/env/.config/environment.d/11-koek-dirs.conf
  KOEK_CALENDARS_DIR="$XDG_DOCUMENTS_DIR/Kalenders"
  KOEK_CONTACTS_DIR="$XDG_DOCUMENTS_DIR/Contacten"
  KOEK_EMAIL_DIR="$XDG_DOCUMENTS_DIR/E-mail"
  KOEK_NEWS_DIR="$XDG_DOCUMENTS_DIR/Nieuws"
  KOEK_NOTES_DIR="$XDG_DOCUMENTS_DIR/Notities"
  KOEK_PROJECTS_DIR="$HOME/Projecten"
#+END_SRC

* Superfluous applications
Hide superfluous applications.

#+BEGIN_SRC conf :noweb-ref desktop-nodisplay :exports none
  [Desktop Entry]
  Type=Application
  NoDisplay=true
#+END_SRC

#+BEGIN_SRC conf :tangle stow/avahi/.local/share/applications/avahi-discover.desktop :noweb yes
  <<desktop-nodisplay>>
  Name=Avahi Zeroconf Browser
#+END_SRC

#+BEGIN_SRC conf :tangle stow/avahi/.local/share/applications/bssh.desktop :noweb yes
  <<desktop-nodisplay>>
  Name=Avahi SSH Server Browser
#+END_SRC

#+BEGIN_SRC conf :tangle stow/avahi/.local/share/applications/bvnc.desktop :noweb yes
  <<desktop-nodisplay>>
  Name=Avahi VNC Server Browser
#+END_SRC

#+BEGIN_SRC conf :tangle stow/blueman/.local/share/applications/blueman-adapters.desktop :noweb yes
  <<desktop-nodisplay>>
  Name=Bluetooth Adapters
#+END_SRC

#+BEGIN_SRC conf :tangle stow/cmake/.local/share/applications/cmake-gui.desktop :noweb yes
  <<desktop-nodisplay>>
  Name=CMake
#+END_SRC

#+BEGIN_SRC conf :tangle stow/cups/.local/share/applications/cups.desktop :noweb yes
  <<desktop-nodisplay>>
  Name=Manage Printing
#+END_SRC

#+BEGIN_SRC conf :tangle stow/emacs/.local/share/applications/emacsclient.desktop :noweb yes
  <<desktop-nodisplay>>
  Name=Emacs (Client)
#+END_SRC

#+BEGIN_SRC conf :tangle stow/hwloc/.local/share/applications/lstopo.desktop :noweb yes
  <<desktop-nodisplay>>
  Name=Hardware Locality lstopo
#+END_SRC

#+BEGIN_SRC conf :tangle stow/java/.local/share/applications/jconsole-java-openjdk.desktop :noweb yes
  <<desktop-nodisplay>>
  Name=OpenJDK Java Console
#+END_SRC

#+BEGIN_SRC conf :tangle stow/java/.local/share/applications/jshell-java-openjdk.desktop :noweb yes
  <<desktop-nodisplay>>
  Name=OpenJDK Java Shell
#+END_SRC

#+BEGIN_SRC conf :tangle stow/jupyter/.local/share/applications/ipython.desktop :noweb yes
  <<desktop-nodisplay>>
  Name=ipython
#+END_SRC

#+BEGIN_SRC conf :tangle stow/jupyter/.local/share/applications/jupyter-nbclassic.desktop :noweb yes
  <<desktop-nodisplay>>
  Name=Jupyter Notebook
#+END_SRC

#+BEGIN_SRC conf :tangle stow/jupyter/.local/share/applications/jupyter-notebook.desktop :noweb yes
  <<desktop-nodisplay>>
  Name=Jupyter Notebook
#+END_SRC

#+BEGIN_SRC conf :tangle stow/picom/.local/share/applications/compton.desktop :noweb yes
  <<desktop-nodisplay>>
  Name=compton
#+END_SRC

#+BEGIN_SRC conf :tangle stow/picom/.local/share/applications/picom.desktop :noweb yes
  <<desktop-nodisplay>>
  Name=picom
#+END_SRC

#+BEGIN_SRC conf :tangle stow/qt/.local/share/applications/assistant.desktop :noweb yes
  <<desktop-nodisplay>>
  Name=Qt Assistant
#+END_SRC

#+BEGIN_SRC conf :tangle stow/qt/.local/share/applications/designer.desktop :noweb yes
  <<desktop-nodisplay>>
  Name=Qt Designer
#+END_SRC

#+BEGIN_SRC conf :tangle stow/qt/.local/share/applications/linguist.desktop :noweb yes
  <<desktop-nodisplay>>
  Name=Qt Linguist
#+END_SRC

#+BEGIN_SRC conf :tangle stow/qt/.local/share/applications/qdbusviewer.desktop :noweb yes
  <<desktop-nodisplay>>
  Name=Qt QDbusViewer
#+END_SRC

#+BEGIN_SRC conf :tangle stow/qt/.local/share/applications/qv4l2.desktop :noweb yes
  <<desktop-nodisplay>>
  Name=Qt V4L2 test utility
#+END_SRC

#+BEGIN_SRC conf :tangle stow/qt/.local/share/applications/qvidcap.desktop :noweb yes
  <<desktop-nodisplay>>
  Name=Qt V4L2 video capture utility
#+END_SRC

#+BEGIN_SRC conf :tangle stow/qtox/.local/share/applications/snorenotify.desktop :noweb yes
  <<desktop-nodisplay>>
  Name=SnoreNotify
#+END_SRC

#+BEGIN_SRC conf :tangle stow/qtox/.local/share/applications/snoresettings.desktop :noweb yes
  <<desktop-nodisplay>>
  Name=SnoreSettings
#+END_SRC

#+BEGIN_SRC conf :tangle stow/steam/.local/share/applications/steam.desktop :noweb yes
  <<desktop-nodisplay>>
  Name=Steam (Runtime)
#+END_SRC

#+BEGIN_SRC conf :tangle stow/tex/.local/share/applications/xdvi.desktop :noweb yes
  <<desktop-nodisplay>>
  Name=XDvi
#+END_SRC

* EXWM

** EXWM GDM
:PROPERTIES:
:header-args:sh: :tangle stow/emacs/.config/exwm/exwmrc
:END:

Disable display power management signaling and screensaver, i.e.,
disable turning off monitors.

#+BEGIN_SRC sh
  xset -dpms
  xset s off
#+END_SRC

Disable bell.

#+BEGIN_SRC sh
  xset b off
#+END_SRC

Launch [[*picom][picom]].

#+BEGIN_SRC sh
  picom &
#+END_SRC

Launch [[*xsettingsd][xsettingsd]].

#+BEGIN_SRC sh
  xsettingsd_preset_file="${XDG_DATA_HOME:-$HOME/.local/share}/xsettingsd/presets/dark"
  xsettingsd_config_file="${XDG_CONFIG_HOME:-$HOME/.config}/xsettingsd/xsettingsd"

  ln -sf "$xsettingsd_preset_file" "$xsettingsd_config_file" \
      && xsettingsd -c "$xsettingsd_config_file" &
#+END_SRC

Set SSH agent socket. The SSH agent, GNOME Keyring Daemon, is launched
by GDM.

#+BEGIN_SRC sh
  eval $(gnome-keyring-daemon -s)
  export SSH_AUTH_SOCK
#+END_SRC

Set pointer cursor. For cursor names, contrary to what the xsetroot
man page says, see [[file:/usr/include/X11/cursorfont.h][cursorfont.h]].

#+BEGIN_SRC sh
  xsetroot -cursor_name left_ptr
#+END_SRC

Hide pointer cursor shortly after it stops moving. Unhide it after it
moved some distance, it's common to bump into the [[https://en.wikipedia.org/wiki/Pointing_stick][pointing stick]] while
typing.

#+BEGIN_SRC sh
  unclutter --jitter 3 --ignore-scrolling &
#+END_SRC

Launch Emacs.

#+BEGIN_SRC sh
  . /etc/exwm/exwmrc
#+END_SRC

** picom
Ignore system configuration.

#+BEGIN_SRC conf :tangle stow/picom/.config/picom/picom.conf
  # Deliberately empty
#+END_SRC

** xsettingsd :setup:
For settings, see [[https://www.freedesktop.org/wiki/Specifications/XSettingsRegistry/][XSETTINGS registry (freedesktop)]] and [[https://docs.gtk.org/gtk4/class.Settings.html#properties][Gtk.Settings
(GTK Documentation)]]. To dump the settings of the running XSETTINGS
daemon (e.g. GNOME Settings Daemon), run:

#+BEGIN_SRC sh
  dump_xsettings
#+END_SRC

To create the configuration directory, run:

#+BEGIN_SRC sh
  mkdir -p "${XDG_CONFIG_HOME:-$HOME/.config}/xsettingsd"
#+END_SRC

*** Window settings
Disable window manager buttons (e.g. maximize, minimize and close
window) in title bar.

#+BEGIN_SRC conf :noweb-ref xsettingsd-common
  Gtk/DecorationLayout ""
#+END_SRC

Enable client side buttons in file dialog title bar.

#+BEGIN_SRC conf :noweb-ref xsettingsd-common
  Gtk/DialogsUseHeader 1
#+END_SRC

Disable blink cursor.

#+BEGIN_SRC conf :noweb-ref xsettingsd-common
  Net/CursorBlink 0
#+END_SRC

*** Themes
Set light and dark theme. For theme names, see [[file:/usr/share/themes/][theme directory]].

#+BEGIN_SRC conf :noweb-ref xsettingsd-light-theme
  Net/ThemeName "Adwaita"
#+END_SRC

#+BEGIN_SRC conf :noweb-ref xsettingsd-dark-theme
  Net/ThemeName "Adwaita-dark"
#+END_SRC

*** Presets
Combine common and theme configuration into light and dark presets.

#+BEGIN_SRC conf :tangle stow/xsettingsd/.local/share/xsettingsd/presets/light :noweb no-export
  <<xsettingsd-common>>
  <<xsettingsd-light-theme>>
#+END_SRC

#+BEGIN_SRC conf :tangle stow/xsettingsd/.local/share/xsettingsd/presets/dark :noweb no-export
  <<xsettingsd-common>>
  <<xsettingsd-dark-theme>>
#+END_SRC

* GNOME catgen :setup:
To apply configuration, run:

#+BEGIN_SRC sh
  gnome-catgen -s
#+END_SRC

** Creative
#+BEGIN_SRC fundamental :tangle stow/catgen/.local/share/applications-categories/Creative.category
  ardour7.desktop
  blender.desktop
  calf.desktop
  gimp.desktop
  openscad.desktop
  org.fontforge.FontForge.desktop
  org.freecadweb.FreeCAD.desktop
  org.inkscape.Inkscape.desktop
  org.pitivi.Pitivi.desktop
  scribus.desktop
  tape.desktop
  valentina.desktop
#+END_SRC

** DisplayCAL
#+BEGIN_SRC fundamental :tangle stow/catgen/.local/share/applications-categories/DisplayCAL.category
  displaycal-3dlut-maker.desktop
  displaycal-apply-profiles.desktop
  displaycal-curve-viewer.desktop
  displaycal-profile-info.desktop
  displaycal-scripting-client.desktop
  displaycal-synthprofile.desktop
  displaycal-testchart-editor.desktop
  displaycal-vrml-to-x3d-converter.desktop
  displaycal.desktop
#+END_SRC

** Internet
#+BEGIN_SRC fundamental :tangle stow/catgen/.local/share/applications-categories/Internet.category
  chromium.desktop
  firefox.desktop
  io.github.qtox.qTox.desktop
  jami-qt.desktop
  org.gnome.Epiphany.desktop
#+END_SRC

** Leisure
#+BEGIN_SRC fundamental :tangle stow/catgen/.local/share/applications-categories/Leisure.category
  makemkv.desktop
  mpv.desktop
  org.gnome.Lollypop.desktop
  org.musicbrainz.Picard.desktop
  puddletag.desktop
  steam-native.desktop
  vlc.desktop
#+END_SRC

** LibreOffice
#+BEGIN_SRC fundamental :tangle stow/catgen/.local/share/applications-categories/LibreOffice.category
  libreoffice-base.desktop
  libreoffice-calc.desktop
  libreoffice-draw.desktop
  libreoffice-impress.desktop
  libreoffice-math.desktop
  libreoffice-startcenter.desktop
  libreoffice-writer.desktop
#+END_SRC

** System
#+BEGIN_SRC fundamental :tangle stow/catgen/.local/share/applications-categories/System.category
  blueman-manager.desktop
  ca.desrt.dconf-editor.desktop
  gnome-system-monitor.desktop
  nm-connection-editor.desktop
  org.gnome.DiskUtility.desktop
  org.gnome.Extensions.desktop
  org.gnome.Logs.desktop
  org.gnome.Settings.desktop
  org.gnome.Terminal.desktop
  org.gnome.font-viewer.desktop
  org.gnome.seahorse.Application.desktop
  pavucontrol.desktop
  yelp.desktop
#+END_SRC

** Utilities
#+BEGIN_SRC fundamental :tangle stow/catgen/.local/share/applications-categories/Utilities.category
  com.obsproject.Studio.desktop
  eid-viewer.desktop
  electrum.desktop
  gromit-mpx.desktop
  org.gnome.Evince.desktop
  org.gnome.FileRoller.desktop
  org.gnome.Nautilus.desktop
  org.gnome.Screenshot.desktop
  org.gnome.eog.desktop
  org.keepassxc.KeePassXC.desktop
  simple-scan.desktop
#+END_SRC

** Work
#+BEGIN_SRC fundamental :tangle stow/catgen/.local/share/applications-categories/Work.category
  arduino.desktop
  emacs.desktop
  org.gnome.Boxes.desktop
  org.gnome.Calculator.desktop
  org.gnome.Connections.desktop
  org.gnome.Maps.desktop
  org.gnome.Weather.desktop
  org.gnome.clocks.desktop
  org.octave.Octave.desktop
  org.wireshark.Wireshark.desktop
  wolfram-mathematica11.desktop
#+END_SRC

* Emacs :setup:
To register the mime types, run:

#+BEGIN_SRC sh
  update-desktop-database "${XDG_DATA_HOME:-$HOME/.local/share}/applications/"
#+END_SRC

For desktop entry or scheme handler format, respectively see [[https://freedesktop.org/wiki/Specifications/desktop-entry-spec/][Desktop
Entry Specification (freedesktop)]] or [[https://freedesktop.org/wiki/Specifications/shared-mime-info-spec/][Shared MIME Info Specification
(freedesktop)]].

** Desktop entry
Hide Emacs in EXWM sessions.

#+BEGIN_SRC conf :tangle stow/emacs/.local/share/applications/emacs.desktop
  [Desktop Entry]
  Type=Application
  Name=Emacs
  Icon=emacs
  TryExec=emacs
  NotShowIn=EXWM;
  Exec=emacs %F
  Terminal=false
  StartupNotify=true
  StartupWMClass=Emacs
  MimeType=text/plain;
#+END_SRC

** With handler
Define handler for visiting files with Emacs.

#+BEGIN_SRC conf :tangle stow/emacs/.local/share/applications/with.desktop
  [Desktop Entry]
  Type=Application
  Name=With Emacsclient
  Icon=emacs
  TryExec=emacsclient
  Exec=emacsclient %F
  Terminal=false
  MimeType=application/pdf;
  NoDisplay=true
#+END_SRC

** mailto handler
Define mailto scheme handler.

#+BEGIN_SRC conf :tangle stow/emacs/.local/share/applications/mailto.desktop
  [Desktop Entry]
  Type=Application
  Name=Emacsclient mailto
  Icon=emacs
  TryExec=emacsclient
  Exec=emacsclient -e "(message-mailto \\"%u\\")"
  Terminal=false
  MimeType=x-scheme-handler/mailto;
  NoDisplay=true
#+END_SRC

** org-protocol handler
Define org protocol scheme handler.

#+BEGIN_SRC conf :tangle stow/emacs/.local/share/applications/org-protocol.desktop
  [Desktop Entry]
  Type=Application
  Name=Emacsclient org-protocol
  Icon=emacs
  TryExec=emacsclient
  Exec=emacsclient %u
  Terminal=false
  MimeType=x-scheme-handler/org-protocol;
  NoDisplay=true
#+END_SRC

* Bash :setup:wip:
#+BEGIN_SRC sh
  mkdir -p "${XDG_DATA_HOME:-$HOME/.local/share}/bash"
#+END_SRC

** Login
:PROPERTIES:
:header-args:sh: :tangle stow/bash/.profile
:END:

Interactive and non interactive

#+BEGIN_SRC sh
  export PATH="$HOME/.local/bin${PATH:+:$PATH}"
#+END_SRC

#+BEGIN_SRC sh
  [[ -f ~/.bashrc ]] && . ~/.bashrc
#+END_SRC

** Interactive
:PROPERTIES:
:header-args:sh: :tangle stow/bash/.bashrc
:END:

Non login

#+BEGIN_SRC sh
  [[ $- != *i* ]] && return
#+END_SRC

#+BEGIN_SRC sh
  export HISTFILE="${XDG_DATA_HOME:-$HOME/.local/share}/bash/history"
#+END_SRC

#+BEGIN_SRC sh
  alias ls='ls -lAh --group-directories-first --color=auto'
#+END_SRC

#+BEGIN_SRC sh
  PS1='[\u@\h \W]\$ '
#+END_SRC

* SSH
For hosts, see [[file:secrets.org::*Hosts][Hosts]].

To generate an SSH key, run:

#+BEGIN_SRC sh
  # Ed25519
  ssh-keygen -t ed25519 -C "nicolas@dejaeghe.re"

  # RSA
  ssh-keygen -t rsa -b 4096 -C "nicolas@dejaeghe.re"
#+END_SRC

Ed25519 is preferred when supported. Unlike passwords, SSH keys can be
reused.

* GnuPG :setup:
When setting GnuPG's home, the directory must be created manually. To
create it, run:

#+BEGIN_SRC sh
  mkdir -p "${XDG_DATA_HOME:-$HOME/.local/share}/gnupg"
  chmod 700 "${XDG_DATA_HOME:-$HOME/.local/share}/gnupg/"
#+END_SRC

Move data directory out of the way.

#+BEGIN_SRC conf :tangle stow/gnupg/.config/environment.d/50-gnupg.conf
  GNUPGHOME="${XDG_DATA_HOME:-$HOME/.local/share}/gnupg"
#+END_SRC

To generate a PGP key, run:

#+BEGIN_SRC sh
  gpg --full-gen-key
#+END_SRC

- Type: RSA and RSA
- Size: 4096
- Expires in: key does not expire
- Name: Nicolas De Jaeghere
- E-mail: nicolas@dejaeghe.re
- Comment:

For a guide on encrypted e-mail, see [[https://emailselfdefense.fsf.org/][Email Self-Defense (FSF)]].

* Syncthing :setup:
Stores:
- archive: Archief
- documents: .Bureaublad, Documenten, Inbox and Projecten
- documents-extra: Boeken, Sjablonen and Varia
- music: Muziek and Podcasts
- pictures: Afbeeldingen
- share: Delen
- video: Video's

To stow all stores, run:

#+BEGIN_SRC sh
  stow -d ~/.ststore/ -t ~/ archive documents documents-extra music pictures share video
#+END_SRC

* Git
Set identity.

#+BEGIN_SRC conf :tangle stow/git/.config/git/config :noweb yes
  [user]
  name = <<name>>
  email = <<email>>
  signingkey = 08153F0DF65B934C
#+END_SRC

Sign commits.

#+BEGIN_SRC conf :tangle stow/git/.config/git/config
  [commit]
  gpgsign = true
#+END_SRC

** Global ignore
Ignore common artifacts. For pattern format, see =man 5 gitignore=.

#+BEGIN_SRC fundamental :tangle stow/git/.config/git/ignore
  # C family
  build/
  compile_commands.json

  # Clojure and ClojureScript
  .clj-kondo/
  .shadow-cljs/
  .nrepl-port

  # Emacs Lisp
  ,*.elc

  # JavaScript
  node_modules/
#+END_SRC

* Firefox

** KeePass Helper :setup:
[[https://addons.mozilla.org/en-US/firefox/addon/keepass-helper-url-in-title/][KeePass Helper (Firefox Add-ons)]]

Enable all components.

** Saka Key :setup:
[[https://addons.mozilla.org/en-US/firefox/addon/saka-key/][Saka Key (Firefox Add-ons)]]

Create a new profile. Change:

#+CAPTION: General
| Name                              | Value |
|-----------------------------------+-------|
| Saka Key enabled                  | Yes   |
| Prevent pages from stealing focus | Yes   |
| Automatically activate hint       | Yes   |
| Detect hints using cursor style   | No    |
| Smooth scroll                     | No    |
| Scroll step                       | 32    |

#+CAPTION: Keybindings
| Name                          | Value    |
|-------------------------------+----------|
| Bind to physical keys         | No       |
| Ignore modifier keys          | No       |
| Hint characters               | qsdfjklm |
| Open link                     | =j j=      |
| Open link in background tab   | =j b=      |
| Open link in foreground tab   | =j f=      |
| Open link in new window       | =j o=      |
| Open link in incognito window | =j p=      |
| Download link                 | =j d=      |
| Focus input                   | =j i=      |
| Go back                       | =l=        |
| Go forward                    | =r=        |
| Go up                         | =u=        |
| Go to root                    | =M-u=      |
| Scroll down                   | =n=        |
| Scroll up                     | =p=        |
| Scroll right                  | =f=        |
| Scroll left                   | =b=        |
| Scroll page down              | =SPC=      |
| Scroll page up                | =DEL=      |
| Scroll half page down         | =C-SPC=    |
| Scroll half page up           | =C-DEL=    |
| Refresh tab                   | =g=        |
| Hard refresh tab              | =M-g=      |
| Pass one key to page          | =s=        |
| Pass all keys to page         | =M-s=      |
| Stop passing keys to page     | =M-s=      |

#+CAPTION: Blacklist
#+BEGIN_SRC fundamental
  ^http://localhost:8888/notebooks/
#+END_SRC

** uBlock Origin
[[https://addons.mozilla.org/en-US/firefox/addon/ublock-origin/][uBlock Origin (Firefox Add-ons)]]

Keep defaults.

* E-mail

** isync :not_exp_env:
:PROPERTIES:
:header-args:conf: :tangle stow/isync/.config/isync/mbsyncrc
:END:

Store sync state with maildir subdirectories, simplifying backup.

#+BEGIN_SRC conf
  SyncState *
#+END_SRC

*** Personal account :setup:
To configure the domain, follow [[https://www.fastmail.com/help/receive/domains-setup-nsmx.html][Configuring your domain with NS/MX
(FastMail)]].

To create the maildir directory, run:

#+BEGIN_SRC sh
  mkdir -p "$KOEK_EMAIL_DIR/Personal"
#+END_SRC

Define local personal store. Only tilde is expanded, not environment
variables. =Inbox= is a directory file name, i.e., no trailing /.

#+BEGIN_SRC conf
  MaildirStore personal_local
  Path "~/Documenten/E-mail/Personal/"
  Inbox "~/Documenten/E-mail/Personal/INBOX"
  SubFolders Verbatim
#+END_SRC

To generate the app password, follow [[https://www.fastmail.com/help/clients/apppassword.html][App passwords (FastMail)]]. Name it
/Emacs e-mail/ and give it access to IMAP and SMTP. Then, to store it
securely, run:

#+BEGIN_SRC sh
  secret-tool store --label="Emacs e-mail personal (IMAP)" host "imap.fastmail.com" port "993" user "nicolas@dejaeghe.re"
  secret-tool store --label="Emacs e-mail personal (SMTP)" host "smtp.fastmail.com" port "465" user "nicolas@dejaeghe.re"
#+END_SRC

Define remote personal store. For server details, see [[https://www.fastmail.com/help/technical/servernamesandports.html][Server names and
ports (FastMail)]].

#+BEGIN_SRC conf
  IMAPStore personal_remote
  Host imap.fastmail.com
  SSLType IMAPS
  User nicolas@dejaeghe.re
  PassCmd "secret-tool lookup host \"imap.fastmail.com\" port \"993\" user \"nicolas@dejaeghe.re\""
#+END_SRC

Define personal channel.

#+BEGIN_SRC conf
  Channel personal
  Far :personal_remote:
  Near :personal_local:
  Patterns *
  Sync All
  Create Both
  Remove Both
  Expunge Both
  CopyArrivalDate yes
#+END_SRC

** mu :setup:
Move maildir directory out of the way.

#+BEGIN_SRC conf :tangle stow/mu/.config/environment.d/50-mu.conf
  MAILDIR="$KOEK_EMAIL_DIR"
#+END_SRC

To create the database, run:

#+BEGIN_SRC sh
  mbsync -c "${XDG_CONFIG_HOME:-$HOME/.config}/isync/mbsyncrc" -a && mu init --my-address="nicolas@dejaeghe.re" --my-address="nicodeja@gmail.com" --my-address="nicodeja@mac.com" --my-address="Nicolas.DeJaeghere@belfius.be" --my-address="n.dejaeghere@televic.com"
#+END_SRC

* vdirsyncer :not_exp_env:
:PROPERTIES:
:header-args:conf: :tangle stow/vdirsyncer/.config/vdirsyncer/config
:END:

Store sync state with vdir directories, simplifying backup. Only tilde
is expanded, not environment variables.

#+BEGIN_SRC conf
  [general]
  status_path = "~/Documenten/Contacten/.vdirsyncer/"
#+END_SRC

** Personal account :setup:
To create the vdir directory, run:

#+BEGIN_SRC sh
  mkdir -p "$KOEK_CONTACTS_DIR/Personal"
#+END_SRC

Define local personal storage.

#+BEGIN_SRC conf
  [storage personal_local]
  type = "filesystem"
  path = "~/Documenten/Contacten/Personal/"
  fileext = ".vcf"
#+END_SRC

To generate the app password, follow [[https://www.fastmail.com/help/clients/apppassword.html][App passwords (FastMail)]]. Name it
/Emacs contacts/ and give it access to CardDAV. Then, to store it
securely, run:

#+BEGIN_SRC sh
  secret-tool store --label="Emacs contacts personal" host "carddav.fastmail.com:443" port "https" user "nicolas@dejaeghe.re"
#+END_SRC

Define remote personal storage. For server details, see [[https://www.fastmail.com/help/technical/servernamesandports.html][Server names
and ports (FastMail)]].

#+BEGIN_SRC conf
  [storage personal_remote]
  type = "carddav"
  url = "https://carddav.fastmail.com/"
  username = "nicolas@dejaeghe.re"
  password.fetch = ["command", "secret-tool", "lookup", "host", "carddav.fastmail.com:443", "port", "https", "user", "nicolas@dejaeghe.re"]
#+END_SRC

Define personal pair.

#+BEGIN_SRC conf
  [pair personal]
  a = "personal_remote"
  b = "personal_local"
  collections = ["from a", "from b"]
#+END_SRC

To create the collections, run:

#+BEGIN_SRC sh
  vdirsyncer discover && vdirsyncer sync
#+END_SRC

* FreeCAD
Add FreeCAD to search path.

#+BEGIN_SRC conf :tangle stow/freecad/.config/environment.d/50-freecad.conf
  PYTHONPATH="/usr/lib/freecad/lib"${PYTHONPATH:+:$PYTHONPATH}
#+END_SRC

* Steam
Show Steam with native runtime as Steam.

#+BEGIN_SRC conf :tangle stow/steam/.local/share/applications/steam-native.desktop
  [Desktop Entry]
  Name=Steam
  Comment=Application for managing and playing games on Steam
  Exec=/usr/bin/steam-native %U
  Icon=steam
  Terminal=false
  Type=Application
  Categories=Network;FileTransfer;Game;
  MimeType=x-scheme-handler/steam;
  Actions=Store;Community;Library;Servers;Screenshots;News;Settings;BigPicture;Friends;
  StartupWMClass=Steam

  [Desktop Action Store]
  Name=Store
  Exec=steam steam://store

  [Desktop Action Community]
  Name=Community
  Exec=steam steam://url/SteamIDControlPage

  [Desktop Action Library]
  Name=Library
  Exec=steam steam://open/games

  [Desktop Action Servers]
  Name=Servers
  Exec=steam steam://open/servers

  [Desktop Action Screenshots]
  Name=Screenshots
  Exec=steam steam://open/screenshots

  [Desktop Action News]
  Name=News
  Exec=steam steam://open/news

  [Desktop Action Settings]
  Name=Settings
  Exec=steam steam://open/settings

  [Desktop Action BigPicture]
  Name=Big Picture
  Exec=steam steam://open/bigpicture

  [Desktop Action Friends]
  Name=Friends
  Exec=steam steam://open/friends
#+END_SRC

* Gromit MPX
#+BEGIN_SRC sh :tangle stow/gromit/.local/bin/wacom-setup-gromit :noweb yes :shebang #!/bin/bash
  pad="<<wacom-pad>>"

  wacom-setup-default
  xsetwacom set "$pad" Button 1 "key f9"
  xsetwacom set "$pad" Button 2 "key +ctrl f9 -ctrl"
  xsetwacom set "$pad" Button 3 "key f8"
  xsetwacom set "$pad" Button 8 "key +shift f9 -shift"
#+END_SRC

#+BEGIN_SRC conf :tangle stow/gromit/.config/gromit-mpx.cfg
  "base pen" = PEN (size=8 color="black");
  "yellow pen" = "base pen" (color="#D0BC00");
  "cyan pen" = "base pen" (color="#00D3D0");
  "base recolor" = RECOLOR (size=128);
  "yellow recolor" = "base recolor" (color="#D0BC00");
  "cyan recolor" = "base recolor" (color="#00D3D0");
  "eraser" = ERASER (size=128);

  "default" = "yellow pen";
  "default"[CONTROL] = "cyan pen";
  "default"[ALT] = "yellow recolor";
  "default"[CONTROL, ALT] = "cyan recolor";
  "default"[SHIFT] = "eraser";
#+END_SRC

* DisplayCAL :setup:
Calibration settings:
- Whitepoint: 6500 K
- White level: 120 cd/m^{2}
- Tone curve: Gamma 2.2

To set the brightness of AU Optronics Corp. AUO B140HAN01.3 to the
value determined during calibration, run:

#+BEGIN_SRC sh
  echo 362 > /sys/class/backlight/intel_backlight/brightness
#+END_SRC

* Wacom :wip:
#+BEGIN_SRC fundamental :noweb-ref wacom-pad :exports none
  Wacom Intuos BT M Pad pad
#+END_SRC

#+BEGIN_SRC fundamental :noweb-ref wacom-stylus :exports none
  Wacom Intuos BT M Pen stylus
#+END_SRC

#+BEGIN_SRC sh :tangle stow/wacom/.local/bin/wacom-map-primary :noweb yes :shebang #!/bin/bash
  stylus="<<wacom-stylus>>"

  xsetwacom set "$stylus" MapToOutput "HDMI-1"
  xsetwacom set "$stylus" Area "0 0 21600 12150"
#+END_SRC

#+BEGIN_SRC sh :tangle stow/wacom/.local/bin/wacom-setup-default :noweb yes :shebang #!/bin/bash
  pad="<<wacom-pad>>"
  stylus="<<wacom-stylus>>"

  wacom-map-primary
  xsetwacom set "$pad" Button 1
  xsetwacom set "$pad" Button 2
  xsetwacom set "$pad" Button 3
  xsetwacom set "$pad" Button 8
  xsetwacom set "$stylus" TabletPCButton on
  xsetwacom set "$stylus" Button 1 "button +1"
  xsetwacom set "$stylus" Button 2 pan
  xsetwacom set "$stylus" Button 3 "button +3"
  xsetwacom set "$stylus" PanScrollThreshold 250
#+END_SRC

* Jupyter Notebook
Move configuration directory out of the way.

#+BEGIN_SRC conf :tangle stow/jupyter/.config/environment.d/50-jupyter.conf
  JUPYTER_CONFIG_DIR="${XDG_CONFIG_HOME:-$HOME/.config}/jupyter"
#+END_SRC

Documentation on configuring the frontend is [[https://jupyter-notebook.readthedocs.io/en/stable/frontend_config.html#persisting-configuration-settings][limited]]. For settings,
see [[https://codemirror.net/doc/manual.html#config][User manual and reference guide - Configuration (CodeMirror)]].

#+BEGIN_SRC json :tangle stow/jupyter/.config/jupyter/nbconfig/notebook.json
  {
      "CodeCell": {
          "cm_config": {
              "cursorBlinkRate": 0
          }
      },
      "MarkdownCell": {
          "cm_config": {
              "cursorBlinkRate": 0
          }
      }
  }
#+END_SRC

** IPython
Move configuration directory out of the way.

#+BEGIN_SRC conf :tangle stow/jupyter/.config/environment.d/50-ipython.conf
  IPYTHONDIR="${XDG_CONFIG_HOME:-$HOME/.config}/ipython"
#+END_SRC

* Leiningen
Move data directory out of the way.

#+BEGIN_SRC conf :tangle stow/leiningen/.config/environment.d/50-leiningen.conf
  LEIN_HOME="${XDG_DATA_HOME:-$HOME/.local/share}/lein"
#+END_SRC

* CUDA
Move cache directory out of the way.

#+BEGIN_SRC conf :tangle stow/cuda/.config/environment.d/50-cuda.conf
  CUDA_CACHE_PATH="${XDG_CACHE_HOME:-$HOME/.cache}/nv/ComputeCache"
#+END_SRC

* Keras
Move configuration directory out of the way.

#+BEGIN_SRC conf :tangle stow/keras/.config/environment.d/50-keras.conf
  KERAS_HOME="${XDG_CONFIG_HOME:-$HOME/.config}/keras"
#+END_SRC

* NLTK
Move data directory out of the way.

#+BEGIN_SRC conf :tangle stow/nltk/.config/environment.d/50-nltk.conf
  NLTK_DATA="${XDG_DATA_HOME:-$HOME/.local/share}/nltk"
#+END_SRC
